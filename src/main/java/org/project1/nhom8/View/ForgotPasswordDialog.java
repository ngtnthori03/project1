/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package org.project1.nhom8.View;

import org.project1.nhom8.model.NhanVien;
import org.project1.nhom8.service.ForgotPasswordService;
import org.project1.nhom8.service.MailService;
import org.project1.nhom8.service.NhanVienService;
import org.project1.nhom8.util.HTMLResolver;
import org.project1.nhom8.util.MD5Util;
import org.project1.nhom8.util.swing.GeneralDocumentListener;

import javax.swing.*;
import java.awt.*;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author ngtnthori03
 */
public class ForgotPasswordDialog extends javax.swing.JDialog {

    private NhanVien nhanVien;

    private final HTMLResolver htmlResolver;

    private final ForgotPasswordService forgotPasswordService;

    private final LoadingPanel loadingPanel;

    private final NhanVienService nhanVienService;

    /**
     * Creates new form ForgotPasswordDFdialog
     */
    public ForgotPasswordDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        nhanVienService = new NhanVienService();

        this.htmlResolver = new HTMLResolver();

        this.forgotPasswordService = new ForgotPasswordService();

        this.loadingPanel = new LoadingPanel() {
            @Override
            public Boolean onLoading() {

                MailService mailService = forgotPasswordService.getMailService();

                mailService.autoAuth();

                mailService.send(email.getText().trim(),
                        "xác thực đổi mật khẩu",
                        htmlResolver.revolve("forgot-password",
                                forgotPasswordService.getMailContext()
                        )
                );

                return mailService.isResult();
            }

            @Override
            public void onFailed() {
                JOptionPane.showMessageDialog(this, "không thể gửi mail đến: "
                        + email.getText().trim());
            }

            @Override
            public void onSuccess() {

                String code = JOptionPane.showInputDialog("nhập mã xác thực");

                if (Optional.ofNullable(code).isPresent()) {
                    if (code.equals(forgotPasswordService.getCode().toString())) {
                        enables(true, new JComponent[]{ok, password, confirmPassword});
                    } else {
                        JOptionPane.showMessageDialog(this, "mã không đúng");
                    }
                }
            }
        };
        loadingPanel.setSize(this.getSize());


        setLocationRelativeTo(null);

        // document listeneer
        email.getDocument().addDocumentListener(new GeneralDocumentListener() {
            @Override
            public void onChange() {
                if (email.getText().trim().matches("^[a-zA-Z0-9.]+@[a-zA-Z0-9.]+")) {
                    enables(true, new JComponent[]{getCode});
                } else {
                    enables(false, new JComponent[]{getCode});
                }
            }
        });

        layer.add(loadingPanel, JLayeredPane.POPUP_LAYER);

        clear();
    }

    public void clear() {
        email.setText("");
        password.setText("");
        confirmPassword.setText("");

        enables(false, new JComponent[]{
                getCode, password, confirmPassword, ok
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layer = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        getCode = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        ok = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quên mật khẩu");

        getCode.setText("Lấy mã");
        getCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCodeActionPerformed(evt);
            }
        });

        ok.setText("Đổi mật khẩu");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        jLabel3.setText("Xác nhận mật khẩu");

        jLabel2.setText("Mật khẩu mới");

        jLabel4.setText("Email");

        layer.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(email, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(getCode, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(password, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(confirmPassword, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(ok, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layer.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layerLayout = new javax.swing.GroupLayout(layer);
        layer.setLayout(layerLayout);
        layerLayout.setHorizontalGroup(
                layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layerLayout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layerLayout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layerLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layerLayout.createSequentialGroup()
                                                .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layerLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(ok))
                                                        .addComponent(confirmPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(password)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layerLayout.createSequentialGroup()
                                                                .addComponent(jLabel4)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layerLayout.createSequentialGroup()
                                                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(getCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addGap(85, 85, 85))))
                        .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layerLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addContainerGap()))
        );
        layerLayout.setVerticalGroup(
                layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layerLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(getCode)
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(7, 7, 7)
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ok)
                                .addContainerGap(78, Short.MAX_VALUE))
                        .addGroup(layerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layerLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(312, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(layer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(layer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCodeActionPerformed

        nhanVien = nhanVienService.findByEmail(email.getText().trim());

        if (Optional.ofNullable(nhanVien).isPresent()) {
            try {
                loadingPanel.start();
            } catch (InterruptedException ex) {
                Logger.getLogger(ForgotPasswordDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "email: " + email.getText().trim() + " không tồn tại");
        }

    }//GEN-LAST:event_getCodeActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

        String pwd = new String(this.password.getPassword());
        String cpwd = new String(this.confirmPassword.getPassword());

        if (pwd.isBlank() || pwd.isEmpty()
                || cpwd.isBlank() || cpwd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "không được để trống mật khẩu hoặc xác nhận mật khẩu");
        } else if (!pwd.equals(cpwd)) { // not equals
            JOptionPane.showMessageDialog(this, "mật khẩu và xác nhận mật khẩu phải giống nhau");
        } else {
            this.nhanVien.setMatKhau(MD5Util.hashPassword(pwd));

            if (this.nhanVienService.update(nhanVien.getMaNV(), nhanVien) > 0) {
                JOptionPane.showMessageDialog(this, "đổi mật khẩu thành công");
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "đổi mật khẩu thất bại");
            }
        }


    }//GEN-LAST:event_okActionPerformed

    public void enables(Boolean value, JComponent[] components) {
        for (Component c : components) {
            c.setEnabled(value);
        }
    }

    public Boolean verificationCode(Integer inputCode) {
        return inputCode.equals(this.forgotPasswordService.getCode());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JTextField email;
    private javax.swing.JButton getCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane layer;
    private javax.swing.JButton ok;
    private javax.swing.JPasswordField password;
    // End of variables declaration//GEN-END:variables
}
